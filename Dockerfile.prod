FROM python:3.11.9-slim-bookworm

# Environment variables
ENV PYTHONDONTWRITEBYTECODE=1 \
    PYTHONUNBUFFERED=1 \
    DJANGO_ENV=production \
    HOME=/home/app \
    APP_HOME=/home/app/backend

# Install required packages
RUN apt-get update && \
    apt-get install -y --no-install-recommends gcc iputils-ping && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/*

# Create system user and group
RUN addgroup --system adora_g && \
    adduser --system --ingroup adora_g adora_u

# Create required directories
RUN mkdir -p $APP_HOME/media $APP_HOME/core/static $APP_HOME/core/staticfiles $APP_HOME/core/media

# Set working directory
WORKDIR $APP_HOME

# Copy requirements and install them
COPY requirements.txt .
RUN pip install --no-cache-dir --upgrade pip && \
    pip install --no-cache-dir -r requirements.txt

# Copy app code (as root) and fix ownership afterward
COPY . .
RUN chown -R adora_u:adora_g $APP_HOME

# Copy entrypoint and wait script
COPY docker-entrypoint* wait-for-it.sh $APP_HOME/
RUN chmod +x $APP_HOME/docker-entrypoint* $APP_HOME/wait-for-it.sh

# Ensure runtime directories are owned by the app user
RUN chown -R adora_u:adora_g /var/run/

# Switch to non-root user
USER adora_u

# Set the entrypoint script
ENTRYPOINT ["./docker-entrypoint.prod.sh"]
